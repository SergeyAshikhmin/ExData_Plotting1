?quantile
rep(3,2)
runif(4)
runif(4)
?gl
airquality$Month
split(airquality,airquality$Month)
printmessage <- function(x) {        if(x > 0)                print("x is greater than zero")        else                print("x is less than or equal to zero")        invisible(x) }
printmessage <-
function(x) {
if (x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")        invisible(x)
}
invisible(x)
print("x is less than or equal to zero")        invisible(x)
printmessage <-
function(x) {
if (x > 0)
print('x is greater than zero')
else
print('x is less than or equal to zero')        invisible(x)
}
invisible(x)
source('~/.active-rstudio-document', echo=TRUE)
printmessage <-
function(x) {
if (x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")    invisible(x)
source('~/.active-rstudio-document', echo=TRUE)
printmessage(3)
printmessage(NaN)
printmessage(Na)
printmessage(NA)
traceback()
library(datasets)
data("iris")
?iris
iris
colnames(iris)
mean(iris$Sepal.Length)
iris$Species='virginica'
iris$Species
iris$Species='virginica1'
iris$Species
library(datasets)
iris
iris[iris$Species]
iris[iris$Species = 'virginica1']
class(iris)
iris[4]
iris[2]
iris[1]
iris
iris[5]
iris[iris$Species]
iris[iris$Species,]
iris
iris[iris$Species='virginica1',]
iris[iris$Species=='virginica1',]
iris[iris$Species=='virginica1',]
save(file = '11.txt',iris)
getwd()
write.csv(iris, file='11.csv')
library(datasets)
data(iris)
write.csv(iris, file='11.csv')
iris[iris$Species=='virginica',]
iris[iris$Species=='virginica',]$Sepal.Length
mean(iris[iris$Species=='virginica',]$Sepal.Length)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)["4"]
tapply(mtcars$hp, mtcars$cyl, mean)["4"] - tapply(mtcars$hp, mtcars$cyl, mean)["8"]
abs(tapply(mtcars$hp, mtcars$cyl, mean)["4"] - tapply(mtcars$hp, mtcars$cyl, mean)["8"])
debug(ls)
ls
ls
1
2
debug(ls)
ls
ls('ddd')
source('D:/SVN/ProgrammingAssignment2/cachematrix.R')
?solve
source('D:/SVN/ProgrammingAssignment2/cachematrix.R')
View(makeCacheMatrix)
source('D:/SVN/ProgrammingAssignment2/cachematrix.R')
c=rbind(c(1, -1/4), c(-1/4, 1))
c
mat <- makeCacheMatrix(c)
mat$get()
cacheSolve(mat)
cacheSolve(mat)
cacheSolve(mat)
?list
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_amt <-sapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
flags$landmass
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library(swirl)
swirl
swirl()
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS,26)
sample(LETTERS)
flips<- sample(0:1, prob = c(0.3, 0.7))
flips<- sample(c(0,1), prob = c(0.3, 0.7))
flips<- sample(c(0,1),100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(n = 5)
rpois(n = 5,lambda = 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
swirl()
s
swirl()
0
library(swirl)
swirl()
library(swirl)
swirl()
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
now(tzone = "America/New_York")
now("America/New_York")
now("America/New_York")
nyc <-now("America/New_York")
nyc
depart<-nyc +days(s)
depart<- nyc +days(2)
depart
depart <- update(depart,hour=17, minute = 34)
depart <- update(depart,hours=17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
? new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
setwd("D:/MyDoc/BigData/coursera.org/Data Science Specialization/Exploratory Data Analysis/Course Project 1")
filename <- "household_power_consumption.txt"
data <- fread(input = filename,sep = ";",header = TRUE, na="?")
library(data.table)
filename <- "household_power_consumption.txt"
data <- fread(input = filename,sep = ";",header = TRUE, na="?")
head(data)
NeedDays<-c("01/02/2007", "02/02/2007")
FilteredData <- subset(data, Date %in% NeedDays)
data$Date %in% NeedDays
str(data$Date %in% NeedDays)
summary(data$Date %in% NeedDays)
NeedDays<-as.character("01/02/2007", "02/02/2007")
NeedDays
library(dplyr)
head(data)
data[,DateTime := as.Date(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
View(data)
View(data)
head(data)
FilteredData<-filter(data, DateTime >= as.Date("2006-02-01 00:00:00"), DateTime < as.Date("2006-02-03 00:00:00"))
View(data)
View(data)
as.Date("2006-02-01 00:00:00")
View(FilteredData)
View(FilteredData)
filter(data, DateTime = as.Date("2006-02-01 00:00:00"))
filter(data, DateTime = as.Date("2006-02-02 00:00:00"))
head(FilteredData<-filter(data, DateTime >= as.Date("2006-02-01 00:00:00")))
head(FilteredData<-filter(data, DateTime >= as.Date("2006-02-01 00:00:00"), DateTime < as.Date("2006-02-03 00:00:00")))
head(FilteredData<-filter(data,  DateTime < as.Date("2006-02-03 00:00:00")))
head(FilteredData<-filter(data,  DateTime > as.Date("2006-02-03 00:00:00")))
head(FilteredData<-filter(data,  DateTime < as.Date("2006-02-03 00:00:00")))
FilteredData<-filter(data, DateTime >= as.Date("2007-02-01 00:00:00"), DateTime < as.Date("2007-02-03 00:00:00"))
View(FilteredData)
filename <- "household_power_consumption.txt"
data <- fread(input = filename,sep = ";",header = TRUE, na="?")
data[,DateTime := as.Date(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
FilteredData<-filter(data, DateTime >= as.Date("2007-02-01 00:00:00"), DateTime < as.Date("2007-02-03 00:00:00"))
filter(data, Date == "01/02/2007")
filter(data, Date = "01/02/2007")
filter(data, Date = "01/2/2007")
filter(data, Date = "1/2/2007")
filter(data, Date == "1/2/2007")
test <-filter(data, Date == "1/2/2007",  Date == "2/2/2007")
test <-filter(data, Date == "1/2/2007" or  Date == "2/2/2007")
test <-filter(data, Date == "1/2/2007" | Date == "2/2/2007")
filename <- "household_power_consumption.txt"
data <- fread(input = filename,sep = ";",header = TRUE, na="?")
FilteredData<-filter(data, Date == "1/2/2007" | Date == "2/2/2007")
FilteredData[,DateTime := as.Date(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
saveRDS(FilteredData, file = "FilteredData.rds")
file.copy("FilteredData.rds","d:/SVN/ExData_Plotting1/")
save()
save(file = "load_data.r")
file.copy("load_data.r","d:/SVN/ExData_Plotting1/")
setwd("d:/SVN/ExData_Plotting1/")
library(data.table)
setwd("d:/SVN/ExData_Plotting1/")
data <- readRDS("FilteredData.rds");
View(data)
png("plot1.png", width = 480, height = 480)
View(data)
View(data)
hist(data, Global_active_power, col="green")
hist(data$Global_active_power, col="green")
hist(data$Global_active_power, col="green")
hist(data$Global_active_power, col="red")
hist(data$Global_active_power)
